# vim: filetype=gitconfig

[user]
	name  = "Jeremy Brubaker"
	email = "jbru362@gmail.com"
[color]
	ui     = auto
    diff   = auto
    branch = auto
[github]
	user  = "jbrubake"
	token = %GHTOKEN%
[alias]
	aa  = !git ls-files -d | xargs -r git rm && git ls-files -m -o --exclude-standard | xargs -r git add
	aup = "!sh -c 'git ls-files -m | grep $1 | xargs -r git add' -"
	ag  = "!sh -c 'git ls-files -m -o --exclude-standard | grep $1 | xargs -r git add' -"
	agp = "!sh -c 'git ls-files -m -o --exclude-standard | grep $1 | xargs -r git add -p' -"
	cg  = "!sh -c 'git ls-files -m | grep $1 | xargs -r git checkout' -"
	dg  = "!sh -c 'git ls-files -m | grep $1 | xargs -r git diff' -"
	pg  = "!sh -c 'git ls-files -m | grep $1 | xargs -r git diff --cached' -"
	rmg = "!sh -c 'git ls-files -d | grep $1 | xargs -r git rm' -"
	rsg = "!sh -c 'git ls-files -c | grep $1 | xargs -r git reset' -"
	lg  = log --graph --pretty=oneline --abbrev-commit --decorate
	si  = !git svn show-ignore > .git/info/exclude
	sh  = !git-sh
    ; Print out last commit message from current branch for each file/directory in pwd
    ; TODO: Remove explicit path (merge script into this file?)
    last = "!sh -c '~/bin/git-last.sh'"
    ; I like git add --patch better
    ap = add --patch
[credential]
	helpder = cache
[core]
	excludesfile = ~/.cvsignore
[init]
	templatedir = /home/jbrubake/.git_template

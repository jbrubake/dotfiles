#!/bin/sh
#
# ~/.env: environment variables

BASH_ENV="$HOME/.env"   # non-interactive setup
ENV="$HOME/.shinit" # equivalent to .bashrc for sh
export BASH_ENV ENV

# Sane defaults {{{1
#
: "${HOME:=~}"
: "${LOGNAME:=$(id -un)}"
: "${UNAME:=$(uname)}"
: "${TMPDIR:=/tmp}"
: "${TMP:=/tmp}"
export HOME LOGNAME UNAME TMPDIR TMP

# XDG Directores {{{1
# Defaults for now
XDG_DATA_HOME="$HOME/.local/share"        # data files
XDG_CONFIG_HOME="$HOME/.config"           # config files
XDG_STATE_HOME="$HOME/.local/state"       # state data (persist application restart)
XDG_CACHE_HOME="$HOME/.local/cache"       # non-essential data

# System defaults
#
if command -v flatpak >/dev/null; then
    XDG_DATA_DIRS=/home/jbrubake/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share/:/usr/share/
fi

# Setup PATH {{{1
test -d "/usr/local/bin" && PATH="/usr/local/bin:$PATH"
test -d "$HOME/bin"  && PATH="$HOME/bin:$PATH"
test -d "$HOME/sbin" && PATH="$HOME/sbin:$PATH"

# Remove duplicate entries
PATH=$(printf %s "$PATH" | awk -vRS=: '!a[$0]++' | paste -s -d:)

# Locale and timezone {{{1
#
: "${LANG:=en_US.UTF-8}"
: "${LANGUAGE:=en_US.UTF-8}"
: "${LC_CTYPE:=en_US.UTF-8}"
: "${LC_ALL:=en_US.UTF-8}"
export LANG LANGUAGE LC_CTYPE LC_ALL

if [ -r /etc/timezone ]; then
    TZ=$( cat /etc/timezone )
else
    TZ=$(date +%Z)
fi
export TZ

# Alternatives {{{1
# EDITOR/VISUAL {{{2
#
if command -v >/dev/null chooser; then
    EDITOR=$(chooser -V editor 2>/dev/null)
fi
if test -z "$EDITOR"; then
    editors="vim vi nano pico ed"
    for e in $editors; do
        if command -v "$e" >/dev/null; then
            EDITOR="$e"
            break
        fi
    done
unset editors
fi
VISUAL=$EDITOR
export VISUAL EDITOR

# PAGER/MANPAGER {{{2
#
if command -v >/dev/null chooser; then
    PAGER=$(chooser -V pager 2>/dev/null)
fi
if test -z "$PAGER"; then
    pagers="vimpager less most more"
    for p in $pagers; do
        if command -v "$p" >/dev/null; then
            EDITOR="$p"
            break
        fi
    done
unset pagers
fi
if test "$PAGER" == "vimpager"; then
    VIMPAGER_RC="$HOME/.vimrc"
    export VIMPAGER_RC
fi
MANPAGER=$PAGER
export PAGER MANPAGER

if command -v ack >/dev/null; then
    ACK_PAGER=$PAGER
    ACK_PAGER_COLOR=$PAGER
    export ACK_PAGER ACK_PAGER_COLOR
fi

# Web browser {{{2
#
if command -v >/dev/null chooser; then
    BROWSER=$(chooser -V browser 2>/dev/null)
fi
if test -z "$BROWSER"; then
    browsers="elinks links w3m lynx"
    if test -n "$DISPLAY"; then
        browsers="firefox chrome chromium netsurf $browsers"
    fi
    for b in $browsers; do
        if command -v "$b" >/dev/null; then
            BROWSER="$b"
            break
        fi
    done
    unset browsers
fi
export BROWSER

# dircolors {{{1
#
if test "$( tput colors )" -ge 0 && command -v dircolors >/dev/null; then
    # If colorfile remains blank, dircolors will use defaults
    colorfile=
    if test -r "$HOME/.dircolors"; then
        colorfile="$HOME/.dircolors" 
    elif test -r "/etc/DIR_COLORS"; then
        colorfile='/etc/DIR_COLORS'
    fi

    test -r "$HOME/.dircolors.local" && localcolorfile="$HOME/.dircolors.local"
    eval $(cat $colorfile $localcolorfile | dircolors -)

    unset colorfile localcolorfile
fi

# Development {{{1
# Perl {{{2
#
if test -d "$HOME/perl5/"; then
    PATH="$HOME/perl5/bin${PATH:+:${PATH}}"
    PERL5LIB="$HOME/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"
    PERL_LOCAL_LIB_ROOT="$HOME/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"
    PERL_MB_OPT="--install_base $HOME/perl5"
    PERL_MM_OPT="INSTALL_BASE=$HOME/perl5"
    export PATH PERL5LIB PERL_LOCAL_LIB_ROOT PERL_MB_OPT PERL_MM_OPT
fi

# ARM cross-compiler {{{2
#
if test -d "$HOME/opt/arm-none-eabi/"; then
    PATH="$HOME/opt/arm-none-eabi/bin:$PATH"
    PATH="$HOME/opt/aarch64-elf/bin:$PATH"
fi

# Python {{{2
# Sigh. Python can't find user site-packages because I refuse to use
# .local or whatever other silly crap it expects
PYTHONPATH=$HOME/lib/python3.8/site-packages/
export PYTHONPATH

# Rust {{{2
CARGO_HOME=$HOME/var/cache/cargo
export CARGO_HOME

# System specific {{{1
#
case "$(uname -o)" in
    *) ;;
esac

# Miscellaneous {{{1
if [ -n "$BASH" ]; then
    # Filename completion ignores backups and vim swap files
    #
    FIGNORE="~:.swp"
    export FIGNORE

    # History stuff
    #
    HISTFILESIZE=50           # Max lines in history
    HISTCONTROL="ignoredups"  # No duplicate history entries
    HISTIGNORE="&:[bf]g:exit" # History ignores these matches

    export HISTFILESIZE HISTCONTROL HISTIGNORE
fi

export WIKI_DIR=~/wiki
export WIKI_SITE=~/wiki/site

export FZF_DEFAULT_OPTS='--layout=reverse'
export FZF_DEFAULT_COMMAND='rg --files'

export DOTFILES=~/src/dotfiles

# Create nerd-font variables
if test -f "$HOME/share/nerd-font/scripts/i_all.sh"; then
    . "$HOME/share/nerd-font/scripts/i_all.sh"
fi

# Always use my .inputrc
if [ -r "$HOME/.inputrc" ]; then
    INPUTRC="$HOME/.inputrc"
    export INPUTRC
fi

# Set news server
NNTPSERVER=nntp.aioe.org
export NNTPSERVER

# Configure tldr client {{{2
#
if command -v tldr >/dev/null; then
    TLDR_PARAM='green'
    TLDR_EPARAM='bold green'
    TLDR_CODE='green'
    TLDR_DESCRIPTION='white'
    TLDR_HEADER='bold yellow'
    TLDR_QUOTE='underline bold blue'

    export TLDR_PARAM TLDR_EPARAM TLDR_CODE
    export TLDR_DESCRIPTION TLDR_HEADER TLDR_QUOTE
fi

# vim: foldlevel=0

#!/bin/sh vim: foldlevel=0
#
# ~/.env: environment variables

# Sane defaults
#
: ${HOME:=~}
: ${LOGNAME:=$(id -un)}
: ${UNAME:=$(uname)}

export HOME LOGNAME UNAME

# Locale settings default to en_US with utf-8 unless already set
#
LANG="en_US.UTF-8"
LANGUAGE="en_US.UTF-8"
LC_CTYPE="en_US.UTF-8"
LC_ALL="en_US.UTF-8"

export LANG LANGUAGE LC_CTYPE LC_ALL

# Always use my .inputrc
if [ -r "$HOME/.inputrc" ]; then
    INPUTRC="$HOME/.inputrc"
    export INPUTRC
fi

# Other
#
TZ=$( cat /etc/timezone ) # Set TZ based on system timezone
export TZ

# EDITOR/VISUAL
#
editors="vim vi nano pico ed"
for e in $editors; do
    if command -v $e >/dev/null; then
        EDITOR=$e
        break
    fi
done
unset editors
VISUAL=$EDITOR
export VISUAL EDITOR

# PAGER/MANPAGER
#
if command -v vimpager >/dev/null; then
    PAGER=`command -v vimpager` # Only works with git if I set the whole path
    VIMPAGER_RC="$HOME/.vimrc"
    export VIMPAGER_RC
elif command -v less >/dev/null; then
    PAGER=less
else
    PAGER=more
fi
MANPAGER=$PAGER
if command -v ack >/dev/null; then
    ACK_PAGER=$PAGER
    ACK_PAGER_COLOR=$PAGER
    export ACK_PAGER ACK_PAGER_COLOR
fi
export PAGER MANPAGER

# Setup dircolors
#
if test $( tput colors ) -ge 0 && command -v dircolors >/dev/null; then
    # If colorfile remains blank, dircolors will use defaults
    colorfile=
    case "$TERM" in
        *256*)
            # Use Solarized scheme if it exists and terminal supports it
            if test -r "$HOME/.dircolors.solarized"; then
                colorfile="$HOME/.dircolors.solarized"
            # Next try 256 color scheme if it exists and terminal supports it
            elif test -r "$HOME/.dircolors.256"; then
                colorfile="$HOME/.dircolors.256"
            fi
            ;;
        *)
            # Next try non-256 color scheme
            if test -r "$HOME/.dircolors"; then
                colorfile="$HOME/.dircolors" 
            # Fallback to system default
            elif test -r "/etc/DIR_COLORS"; then
                colorfile='/etc/DIR_COLORS'
            fi
            ;;
    esac
    colorfile="$HOME/.dircolors.ansi-dark"
    eval $(cat $colorfile "$HOME/.dircolors.local" | dircolors -)

    unset colorfile
fi

# Configure tldr client
#
if command -v tldr >/dev/null; then
    TLDR_PARAM='green'
    TLDR_EPARAM='bold green'
    TLDR_CODE='green'
    TLDR_DESCRIPTION='white'
    TLDR_HEADER='bold yellow'
    TLDR_QUOTE='underline bold blue'

    export TLDR_PARAM TLDR_EPARAM TLDR_CODE
    export TLDR_DESCRIPTION TLDR_HEADER TLDR_QUOTE
fi

# Set default web browser
#
browsers="elinks links w3m lynx"
if test -n "$DISPLAY"; then
    browsers="chrome chromium firefox netsurf $browsers"
fi

for b in $browsers; do
    if command -v $b >/dev/null; then
        BROWSER=$b
        break
    fi
done
unset browsers
export BROWSER

# Set news server
#
NNTPSERVER=nntp.aioe.org
export NNTPSERVER

# Perl configuration
#
if test -d "$HOME/perl5/"; then
    PATH="$HOME/perl5/bin${PATH:+:${PATH}}"
    PERL5LIB="$HOME/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"
    PERL_LOCAL_LIB_ROOT="$HOME/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"
    PERL_MB_OPT="--install_base \"$HOME/perl5\""
    PERL_MM_OPT="INSTALL_BASE=$HOME/perl5"
    export PATH PERL5LIB PERL_LOCAL_LIB_ROOT PERL_MB_OPT PERL_MM_OPT
fi

# ARM cross-compiler PATH
#
if test -d "$HOME/opt/arm-none-eabi/"; then
    PATH="$HOME/opt/arm-none-eabi/bin:$PATH"
    PATH="$HOME/opt/aarch64-elf/bin:$PATH"
fi

# Cygwin specific
#
case "$(uname -o)" in
    *Cygwin*)
        LD=gcc # Cygwin won't build without this. Weird
        export LD
esac

if [ -n "$BASH" ]; then
    # Filename completion ignores backups and vim swap files
    #
    FIGNORE="~:.swp"

    # History stuff
    #
    HISTFILESIZE=50           # Max lines in history
    HISTCONTROL="ignoredups"  # No duplicate history entries
    HISTIGNORE="&:[bf]g:exit" # History ignores these matches

    export FIGNORE HISTFILESIZE HISTCONTROL HISTIGNORE
fi

export VIMWIKI_DIR=~/docs/vimwiki
export VIMWIKI_SITE=~/docs/vimwiki/site

export FZF_DEFAULT_OPTS='--layout=reverse'
export FZF_DEFAULT_COMMAND='rg --files'
# Create nerd-font variables
if test -f "$HOME/share/nerd-font/i_all.sh"; then
    . "$HOME/share/nerd-font/i_all.sh"
fi

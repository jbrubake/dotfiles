#!/bin/sh vim: foldlevel=0
#
# ~/.env: environment variables

# Sane defaults
#
: ${HOME:=~}
: ${LOGNAME:=$(id -un)}
: ${UNAME:=$(uname)}

export HOME LOGNAME UNAME

# Locale settings default to en_US with utf-8 unless already set
#
: ${LANG:="en_US.UTF-8"}
: ${LANGUAGE:="en_US.UTF-8"}
: ${LC_CTYPE:="en_US.UTF-8"}
: ${LC_ALL:="en_US.UTF-8"}

export LANG LANGUAGE LC_CTYPE LC_ALL

# Always use my .inputrc
if [ -r "$HOME/.inputrc" ]; then
    INPUTRC="$HOME/.inputrc"
    export INPUTRC
fi

# Other
#
HISTSIZE=20               # Max commands in history
TZ=$( cat /etc/timezone ) # Set TZ based on system timezone
export HISTSIZE TZ

# EDITOR/VISUAL
#
if command -v vim >/dev/null; then
    EDITOR=vim
elif command -v vi >/dev/null; then
    EDITOR=vi
elif command -v nano >/dev/null; then
    EDITOR=nano
elif command -v pico >/dev/null; then
    EDITOR=pico
else
    EDITOR=ed
fi
VISUAL=$EDITOR
export VISUAL EDITOR

# PAGER/MANPAGER
#
if command -v vimpager >/dev/null; then
    PAGER=`command -v vimpager` # Only works with git if I set the whole path
elif command -v less >/dev/null; then
    PAGER=less
else
    PAGER=more
fi
MANPAGER=$PAGER
if command -v ack >/dev/null; then
    ACK_PAGER=$PAGER
    ACK_PAGER_COLOR=$PAGER
    export ACK_PAGER ACK_PAGER_COLOR
fi
export PAGER MANPAGER

# Setup dircolors
#
if test $( tput colors ) -ge 0 && command -v dircolors >/dev/null; then
    # Use Solarized scheme if it exists and terminal supports it
    if test -r "$HOME/.dircolors.solarized" && [[ $TERM =~ 256 ]]; then
        colorfile="$HOME/.dircolors.solarized"
    # Next try 256 color scheme if it exists and terminal supports it
    elif test -r "$HOME/.dircolors.256" && [[ $TERM =~ 256 ]]; then
        colorfile="$HOME/.dircolors.256"
    # Next try non-256 color scheme
    elif test -r "$HOME/.dircolors"; then
        colorfile="$HOME/.dircolors" 
    # Fallback to system default
    elif test -r "/etc/DIR_COLORS"; then
        colorfile='/etc/DIR_COLORS'
    # Leave $colorfile empty to fallback to dircolors defaults
    else
        colorfile=
    fi

    eval $(dircolors $colorfile)

    unset colorfile
fi

# Set default web browser
#
if test -n "$DISPLAY"; then
    browsers="chrome chromium firefox uzbl-browser"
else
    browsers="links lynx"
fi

for b in $browsers; do
    command -v $b >/dev/null &&
        BROWSER=$b
done
unset browsers
export BROWSER

# Perl configuration
#
if test -d "$HOME/perl5/"; then
    PATH="$HOME/perl5/bin${PATH:+:${PATH}}"
    PERL5LIB="$HOME/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"
    PERL_LOCAL_LIB_ROOT="$HOME/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"
    PERL_MB_OPT="--install_base \"$HOME/perl5\""
    PERL_MM_OPT="INSTALL_BASE=$HOME/perl5"
    export PATH PERL5LIB PERL_LOCAL_LIB_ROOT PERL_MB_OPT PERL_MM_OPT
fi

# Cygwin specific
#
if [[ $(uname -o) =~ "Cygwin" ]]; then
    LD=gcc # Cygwin won't build without this. Weird
    export LD
fi

if [ -n "$BASH" ]; then
    # Filename completion ignores backups and vim swap files
    #
    FIGNORE="~:.swp"

    # History stuff
    #
    HISTFILESIZE=50           # Max lines in history
    HISTCONTROL="ignoredups"  # No duplicate history entries
    HISTIGNORE="&:[bf]g:exit" # History ignores these matches

    export FIGNORE HISTFILESIZE HISTCONTROL HISTIGNORE
fi


#!/bin/sh
#
# Jeremy Brubaker <jbru362@gmail.com>

# Helper functions {{{1
# NOTE: these are unset at the end of the file
#
# have {{{2
#
# @description Check PATH for a command
#
# @arg $1 str Command to search for
#
# @exitcode true if found
# @exitcode false if not found
#
have() { command -v "$1" >/dev/null; }

# Defaults {{{1
#
# Color flag for ls and grep
[ "$( tput colors )" -ge 0 ] && color_flag='--color=auto'

# My standard ls aliases {{{1
#
if have exa; then
    _ls=exa
elif have eza; then
    _ls=eza
elif command ls --version | grep -q GNU; then
    _ls=gnu-ls
else
    _ls=ls
fi

case $_ls in
    eza | exa)
        export LS_OPTS="--group-directories-first --sort extension -F $color_flag"
        alias ls='command  '"$_ls"' $LS_OPTS'
        alias la='command  '"$_ls"' $LS_OPTS -a'
        alias ll='command  '"$_ls"' $LS_OPTS -lg'
        alias lla='command '"$_ls"' $LS_OPTS -lag'
        alias l.='command  '"$_ls"' $LS_OPTS -d .*'
        alias ll.='command '"$_ls"' $LS_OPTS -lg -d .*'
        alias lsap='lsp -A --icons' # lsp is defined in ~/.functions
        ;;
    gnu-ls) # GNU ls
        export LS_OPTS="--group-directories-first -hXFH $color_flag"
        alias ls='command  ls $LS_OPTS'
        alias la='command  ls $LS_OPTS -A'
        alias ll='command  ls $LS_OPTS -l'
        alias lla='command ls $LS_OPTS -lA'
        alias l.='command  ls $LS_OPTS -d .*'
        alias ll.='command ls $LS_OPTS -ld .*'
        alias lsap="lsp -A" # lsp is defined in ~/.functions
        ;;
    ls) # POSIX ls
        export LS_OPTS="-XFH"
        alias ls='command  ls $LS_OPTS'
        alias la='command  ls $LS_OPTS -a'
        alias ll='command  ls $LS_OPTS -l'
        alias lla='command ls $LS_OPTS -la'
        alias l.='command  ls $LS_OPTS -d .*'
        alias ll.='command ls $LS_OPTS -ld .*'
        alias lsap="lsp -a" # lsp is defined in ~/.functions
        ;;
    *) printf 'How did we get here?' >&2 ;;
esac

unset _ls

# Try color in *grep {{{1
#
alias grep="grep $color_flag" # force color in *grep

# Easier navigation {{{1
alias ..="cd .." # up one directory
alias ...="cd ../.." # up two directories
if [ -n "$BASH" ]; then
    alias -- -="cd -" # cd to previous directory
else
    alias -="cd -" # cd to previous directory
fi

# X-specific {{{1
#
if [ -n "$DISPLAY" ]; then
    # force using vimx so Vim can access the system clipboard
    if have vimx; then
        alias vim=vimx
        alias vi=vimx
    fi
fi

# OS-specific {{{1
#
case $(uname -o) in
    *) ;;
esac

# Alternatives {{{1
alias term='( $(my terminal)& )'     # open terminal
alias calc='( $(my calculator)& )'   # open calculator
alias calendar='( $(my calendar)& )' # open calendar

# GRC Highlighting {{{1

# Aliases that will exist only if grc is found {{{2
#
if have grc; then
    alias grc="grc -es" # colorize stderr and stdout

    alias configure='grc ./configure'

    alias free='grc free -h'

    alias jobs='jobs -l | grcat conf.jobs'

    alias as='grc as'
    alias gas='grc gas'
    alias gcc='grc gcc'
    alias g++='grc g++'

    if have docker; then
        alias docker='grc docker'
        alias docker-compose='grc docker-compose'
        alias docker-machine='grc docker-machine'
        alias kubectl='grc kubectl'
    fi

    alias dig='grc dig'
    alias ifconfig='grc ifconfig'
    alias iptables='grc iptables'
    alias mtr='grc mtr'
    alias netstat='grc netstat'
    alias nmap='grc nmap'
    alias tcpdump='grc tcpdump'
    alias traceroute='grc traceroute'
    alias traceroute6='grc traceroute6'
    alias whois='grc whois'

    alias dnf='grc dnf'

    alias sysctl='grc sysctl'
    alias systemctl='grc systemctl'
    alias journalctl='grc journalctl'

    alias blkid='grc blkid'
    alias env='grc env'
    alias fdisk='grc fdisk'
    alias findmnt='grc findmnt'
    alias id='grc id'
    alias last='grc last'
    alias ld='grc ld'
    alias lsof='grc lsof'
    alias lsblk='grc lsblk'
    alias lspci='grc lspci'
    alias mount='grc mount'
    alias printenv='printenv | grcat conf.env'
    alias ps='grc ps'
    alias pv='grc pv'
    alias sensors='grc sensors'
    alias sockstat='grc sockstat'
    alias ss='grc ss'
    alias stat='grc stat'
    alias uptime='grc uptime'
    alias vmstat='grc vmstat'

    alias semanage='grc semanage'
    alias getsebool='grc getsebool'
fi

# Aliases that differ if grc is not found {{{2
#
if have grc; then
    alias df='grc df -hT'
    alias du='grc du -h'
    alias du1='grc du -h --max-depth=1' # top-level summary
else
    alias df='df -hT'
    alias du='du -h'
    alias du1='du -h --max-depth=1' # top-level summary
fi

# Cassowary {{{1
#
if have cassowary; then
    alias word='cassowary -c guest-run winword'
    alias excel='cassowary -c guest-run excel'
    alias ppt='cassowary -c guest-run powerpnt'
    alias mspub='cassowary -c guest-run mspub'
    alias onenote='cassowary -c guest-run onenote'
    alias access='cassowary -c guest-run msaccess'
fi

# Miscellaneous {{{1
#
have clear || alias clear='tput clear' # emulate clear(1) if I don't have it
have todo.sh && alias t=todo.sh

# If my pager is not less, make me think it is {{{2
if [ "$PAGER" != 'less' ]; then
    case $PAGER in
        bat) pager='bat -p -pager less' ;;
        *)  pager=$PAGER ;;
    esac
    alias  less=$pager
    alias zless=$pager
    unset pager
fi

# Better cat {{{2
if [ "$PAGER" = 'vimpager' ]; then
    alias cat='vimcat'
else
    if have highlight; then
        alias cat='highlight --force -O truecolor --style $HIGHLIGHT_STYLE'
    elif have bat; then
            alias cat='bat -p --paging never --theme $BAT_STYLE'
    elif have pygmentize; then
        alias cat='pygmentize -O style=$PYGMENTIZE_STYLE -g'
    fi
fi

# Miscellaneous {{{1
#
# Get my real IP
#
if have wget; then
    alias myip='wget http://ipecho.net/plain -O - -q; echo'
elif have curl; then
    alias myip='curl http://ipecho.net/plain; echo'
else
    alias myip='printf "wget or curl not available\n"'
fi

alias ':q'=exit                                           # Exit like it's vim
alias +x='chmod +x'                                  # Make file executable
if [ -n "$BASH" ]; then
    alias -- -x='chmod -x'                           # Make file non-executable
else
    alias -x='chmod -x'
fi
alias bell='printf "\a"'                                  # Ring the bell
alias gist="vim '+Gist -l'"                               # Open Gist browser
alias jobs='jobs -l'                                      # List PID
alias klsshd='kill -TERM $(command cat $(sshd -f "$LOCAL_SSHD_CONFIG" -T | grep pidfile | cut -d" " -f2))'  # Stop user sshd
alias loc='locate -d "$LOCATEDB" "$@"'                    # Use my personal locate(1) db
alias lsshd='/usr/sbin/sshd -f "$LOCAL_SSHD_CONFIG"' # Start user sshd
alias nu="who | cut -d' ' -f1 | uniq | wc -l"             # Get number of logged on users
have reset || alias reset='tput sgr0'                               # Reset terminal
alias rpg=rpg-cli                                         # rpg-cli but shorter
alias sudo='sudo '                                        # Enable aliases to be sudoâ€™ed
alias tree='command tree -CFI '.git' --dirsfirst'         # Better looking tree(1)
alias unexec="find . -type f -exec chmod ogu-x '{}' \;"   # chmod -x ALL files in tree (needed when copying from Windows)

have colormake && alias make=colormake

have buku && alias b='buku --suggest'

alias pickfont="fc-list | sed -e 's/.*: //' -e 's/,.*//' -e 's/:.*//' | sort -u | fzf"

alias r='fc -s'

# Cleanup {{{1
#
unset color_flag
unset have

# vim: ft=sh foldlevel=0


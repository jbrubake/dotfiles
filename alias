#!/bin/sh
#
# Jeremy Brubaker <jbru362@gmail.com>

# Helper functions {{{1
# NOTE: these are unset at the end of the file
#
# have {{{2
#
# @description Check PATH for a command
#
# @arg $1 str Command to search for
#
# @exitcode true if found
# @exitcode false if not found
#
have() { command -v "$1" >/dev/null; }


# ls(1) {{{1
#
if [ "$LS" = 'ls' ]; then
    command ls --version | grep -q GNU && _ls=gnu-ls
else
    _ls=$LS
fi

case $_ls in
    eza | exa)
        ls_opts=''; ll_opts='-lg';
        la_opts='-a'; lla_opts='-lag';
        ld_opts='-d .*'; lld_opts='-lg -d .*';
        lsap_opts=''
        ;;
    gnu-ls) # GNU ls
        ls_opts=''; ll_opts='-l';
        la_opts='-A'; lla_opts='-lA';
        ld_opts='-d .*'; lld_opts='-l -d .*';
        lsap_opts=''
        ;;
    ls) # POSIX ls
        ls_opts=''; ll_opts='-l';
        la_opts='-a'; lla_opts='-la';
        ld_opts='-d .*'; lld_opts='-lg -d .*';
        lsap_opts=''
        ;;
    *) printf 'How did we get here?' >&2 ;;
esac

alias ls="command  $LS $ls_opts"'  $LS_OPTS'
alias ll="command  $LS $ll_opts"'  $LS_OPTS'
alias la="command  $LS $la_opts"'  $LS_OPTS'
alias lla="command $LS $lla_opts"' $LS_OPTS'
alias l.="command  $LS $ld_opts"'  $LS_OPTS'
alias ll.="command $LS $lld_opts"' $LS_OPTS'
alias lsap='lsp'"$lsap_opts" # lsp is defined in ~/.functions

unset _ls ls_opts la_opts ll_opts lla_opts ld_opts lld_opts ldap_opts

# cd {{{1
alias  ..='cd ..'          # up one directory
alias ...='cd ../..'       # up two directories
alias ${BASH:+--} -='cd -' # cd to previous directory

# X-specific {{{1
#
if [ -n "$DISPLAY" ]; then
    # force using vimx so Vim can access the system clipboard
    if have vimx; then
        alias vim=vimx
        alias  vi=vimx
    fi
fi

# OS-specific {{{1
#
case $(uname -o) in
    *) ;;
esac

# Alternatives {{{1
alias     term='( $(my terminal)& )'
alias     calc='( $(my calculator)& )'
alias calendar='( $(my calendar)& )'

# Cassowary {{{1
#
if have cassowary; then
    alias word='cassowary -c guest-run winword'
    alias excel='cassowary -c guest-run excel'
    alias ppt='cassowary -c guest-run powerpnt'
    alias mspub='cassowary -c guest-run mspub'
    alias onenote='cassowary -c guest-run onenote'
    alias access='cassowary -c guest-run msaccess'
fi

# PAGER / cat {{{1
#
# - less / zless calls $PAGER
# - syntax highlight cat if possible (depends on *_STYLE variables)
#
case $PAGER in
    vimpager)
        alias  less='vimpager'
        alias zless='vimpager'
        alias cat='vimcat' ;;
    bat)
        alias  less='bat -p -pager less'
        alias zless='bat -p -pager less'
        alias cat='bat -p --paging never' ;;
    *)
        alias  less=$PAGER
        alias zless=$PAGER
        if have highlight; then
            alias cat='highlight --force -O truecolor --style ${HIGHLIGHT_STYLE:-solarized-dark}'
        elif have bat; then
            alias cat='bat -p --paging never --theme ${BAT_STYLE:-solarized-light}'
        elif have pygmentize; then
            alias cat='pygmentize -O style=${PYGMENTIZE_STYLE:-solarized-light} -g'
        fi ;;
esac

# Get my real IP {{{1
#
if have curl; then
    alias   myip='curl http://ipecho.net/plain; echo'
elif have wget; then
    alias   myip='wget http://ipecho.net/plain -O - -q; echo'
else
    alias   myip='printf "wget or curl not available\n"'
fi

# Miscellaneous {{{1
#
[ "$( tput colors )" -ge 0 ] && color_flag='--color=auto'

have reset || alias reset='tput sgr0'  # reset terminal
have clear || alias clear='tput clear' # emulate clear(1) if I don't have it
              alias   cls='clear'      # windows clear

have todo.sh   && alias    t='todo.sh'        # easier todo.sh
have rpg-cli   && alias  rpg='rpg-cli'        # easier rpg-cli
have colormake && alias make='colormake'      # use colormake
have buku      && alias    b='buku --suggest' # easier buku

alias             +x='chmod +x' # make file executable
alias ${BASH:+--} -x='chmod -x' # make file non-executable 

alias      :q='exit'                                    # exit like it's vim
alias    bell='printf "\a"'                             # ring the bell
alias    gist='vim "+Gist -l"'                          # open Gist browser
alias    grep="grep $color_flag"                        # force color in *grep
alias     loc='locate -d "$LOCATEDB" "$@"'              # use my personal locate(1) db
alias      nu="who | cut -d' ' -f1 | uniq | wc -l"      # get number of logged on users
alias       r='fc -s'                                   # ^old^new but global
alias    sudo='sudo '                                   # enable aliases to be sudoâ€™ed
alias   tree='command tree -CFI ".git" --dirsfirst'     # better looking tree(1)
alias unexec='find . -type f -exec chmod ogu-x "{}" \;' # chmod -x all FILES in tree (needed when copying from Windows)

alias pickfont='fc-list | sed -e "s/.*: //" -e "s/,.*//" -e "s/:.*//" | sort -u | fzf'

# start / stop a local-only ssh server
if have sshd; then
    alias klsshd='kill -TERM $(command cat $(sshd -f "$LOCAL_SSHD_CONFIG" -T | grep pidfile | cut -d" " -f2))'  # Stop user sshd
    alias lsshd='/usr/sbin/sshd -f "$LOCAL_SSHD_CONFIG"'
fi

# fall back if grc(1) not available
_jobs='jobs -l' # list PIDs
alias jobs=$jobs

# grc(1)-only aliases {{{2
#
if have grc; then
    GRC_OPTS='-es' # colorize stderr and stdout
    _grc='grc $GRC_OPTS'
    alias grc=$_grc

    # Create alias for all configs found *if* the command exists
    # TODO: check for directory existence
    for c in /usr/share/grc/conf.* ~/.grc/*; do
        c=${c##*/}; c=${c#conf.} # extract command name
        have $c && alias $c="$_grc $c"
    done

    # Always create these
    alias configure="$_grc ./configure"
    alias   printev='printenv | grcat conf.printenv'
    alias   jobs="$_jobs${BASH:+ | grcat conf.jobs}" # colorized version
fi

# Use grc(1) if available {{{2
#
alias   df="${_grc:+"$_grc "}df -hT"              # human-readable is better
alias   du="${_grc:+"$_grc "}du -h"               # human-readable is better
alias  du1="${_grc:+"$_grc "}du -h --max-depth=1" # top-level summary
alias free="${_grc:+"$_grc "}free -h"             # human-readable is better

# Cleanup {{{1
#
unset color_flag
unset have
unset _grc
unset _jobs

# vim: ft=sh foldlevel=0

